We look at the grammar for show phrase we look om editor the grammar in the Om and adore for show phrase look around half way down on the left-hand side you'll see the rule call show phrase in that rule matches if there is a literal word show with a capital S I think all the file name other literal word at a phone call to coordinate with a C I have followed by a literal. The other coat around that will show you how those things parcelled a file name is just a name in the name i name is a L a letter followed by a more letters or digits or underscores or colons in this particular case according it is a number X and a number and because there's a c in the name of the rule spaces are skipped so it could be number space x space number will match we could put a number
Eggs
Number number stuff like that the other interesting rule to look that is taxed which is the second rule down and it has two legs each Lego tag with a – – the first leg is called macro and the second leg is called ignore OMG ass parses or tries the legs tries to match the legs in the order that they appear so when I get a piece of text it's pointing at a character and then tries to apply to syntactic rule called micro with a capital M which breaks down into the rules show freeze we in larger examples or larger production code we might add more legs the macro rule but in this example I will need got one leg unless the show for his leg so if it matches the show phrase it eats and if it doesn't match and it drops down to the next leg which says take any character and the macro and the – – macaron – – ignore tags they don't do anything they will be used later in the semantics processing and if we look at the far right hand side window we see a test of square test the text and you'll see there's an a space B space E
Than the phrase show prologue_BG space at space 0X -550 dodge
D E F probably a new liner so I can't tell from the way it's displayed at the moment and at the very bottom is the parse tree of the grammar applied to that input and Wilson and you see that the parse tree says the A was matched as text Dash ignore the space after the AA is mash those text also the beer smash this text and so on and then finally hits the middle of the well that hits the second line in the second line passes out as show prologue of where the new line has been eaten by the space skipping rule over because she'll praise is written in capitals it has a capital letter at the front and macro has a capital letter at the front you'll see that the space after show has been removed also and then it goes through does the file name the ex oh no the file i am at is there without spaces and then coordinate in capitals it was matched out as a number X another number with a minus sign in front of it and then we drop back into parsing things that don't match the phrase and we can DEF with the spaces in between if we don't look the parsing explorer we see the first box contains the source code the second box contains the grammar bird box contains the rewriting or a rule that I've called the fabricator and then the fourth box at the bottom which is white is the open of the fabricator so the person explorer uses jesus applies the grammar against the input source if that all matches then it calls rule by rule the fabricator and if you look closely at the fabricator it's written to produce strings a string of final string that looks like a piece of Jason and in in producing the string the fabricator basically has rules that have to match one to one with the rules in the grammar oops i want